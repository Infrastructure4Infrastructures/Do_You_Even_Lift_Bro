// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id       Int        @id @default(autoincrement())
  username String
  password String
  Workouts Workouts[]
  Meal     Meal[]
  Journal  Journal[]
}

model Workouts {
  id                Int                 @id @default(autoincrement())
  name              String
  difficulty        String
  user              User                @relation(fields: [userId], references: [id])
  userId            Int
  Workout_Exercises Workout_Exercises[]
  Journal_Entry     Journal_Entry[]
}

model Exercises {
  id                Int                 @id @default(autoincrement())
  name              String
  description       String
  category          String
  Workout_Exercises Workout_Exercises[]
  Journal_Entry     Journal_Entry[]
}

model Workout_Exercises {
  id          Int       @id @default(autoincrement())
  setsGoals   Int
  repsGoals   Int
  mySets      Int
  myReps      Int
  workouts    Workouts  @relation(fields: [workoutsId], references: [id])
  workoutsId  Int
  exercises   Exercises @relation(fields: [exercisesId], references: [id])
  exercisesId Int
}

model Meal {
  id              Int               @id @default(autoincrement())
  mealNum         Int
  user            User              @relation(fields: [userId], references: [id])
  userId          Int
  Meal_Food_Items Meal_Food_Items[]
  Journal_Entry   Journal_Entry[]
}

model Food_Item {
  id              Int               @id @default(autoincrement())
  name            String
  description     String
  calories        Int
  Meal_Food_Items Meal_Food_Items[]
  Journal_Entry   Journal_Entry[]
}

model Meal_Food_Items {
  id          Int       @id @default(autoincrement())
  meal        Meal      @relation(fields: [mealId], references: [id])
  mealId      Int
  food_item   Food_Item @relation(fields: [food_ItemId], references: [id])
  food_ItemId Int
}

model Journal {
  id            Int             @id @default(autoincrement())
  user          User            @relation(fields: [userId], references: [id])
  userId        Int
  Journal_Entry Journal_Entry[]
}

model Journal_Entry {
  id          Int        @id @default(autoincrement())
  date        DateTime   @default(now())
  note        String
  journal     Journal    @relation(fields: [journalId], references: [id])
  journalId   Int
  workouts    Workouts?  @relation(fields: [workoutsId], references: [id])
  workoutsId  Int?
  exercises   Exercises? @relation(fields: [exercisesId], references: [id])
  exercisesId Int?
  meal        Meal?      @relation(fields: [mealId], references: [id])
  mealId      Int?
  food_item   Food_Item? @relation(fields: [food_ItemId], references: [id])
  food_ItemId Int?
}
